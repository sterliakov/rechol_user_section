services:
    db:
        image: postgres:16-alpine
        env_file:
        -   .env
        restart: always
        volumes:
        -   db_volume_24_25:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U ${POSTGRES_USER}
            interval: 10s
            timeout: 5s
            retries: 5

    app:
        env_file: .env
        environment:
            ENVIRONMENT: dev
        build:
            context: .
            dockerfile: Dockerfile
            target: deploy
            args:
                UV_FLAGS: --no-dev
        depends_on:
        -   db
        volumes:
        -   media_volume_24_25:/var/www/rechol_user_section/media
        restart: always

    agw:
        image: sterliakov/aws-apigw-emulator
        environment:
            TARGET: app:8080
        depends_on:
        -   app

    nginx:
        build:
            context: .
            dockerfile: Dockerfile
            target: nginx
        restart: always
        healthcheck:
            test: curl -f http://nginx:80/health
            interval: 10s
            timeout: 5s
            retries: 5
        ports:
        -   80:80
        depends_on:
        -   app

volumes:
    db_volume_24_25:
    media_volume_24_25:
