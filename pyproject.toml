[project]
dependencies = [
    "Django~=5.1",
    "djangorestframework~=3.15.2",
    "django-compressor~=4.4",
    "django-countries~=7.5.1",
    "django-crispy-forms~=1.14.0",
    "django-bootstrap-datepicker-plus ~= 5.0",
    "django-object-actions ~= 4.2.0",
    "django-phonenumber-field ~= 7.2",
    "django-postgres-extra ~= 2.0",
    "django-redis ~= 5.4",
    "django-widget-tweaks~=1.4.12",
    "django-ses ~= 4.2",
    "django-import-export ~= 3.2",
    "django-concurrency ~= 2.6",
    "django-debug-toolbar ~= 4.4",
    "psycopg2-binary~=2.9.9",
    "tablib[cli,xlsx] ~= 3.7",
    "pypdf ~= 3.17.2",
    "reportlab ~= 4.0.8",
    "phonenumbers>=8.13.48",
    "django-storages[s3]>=1.14.4",
]
description = ""
name = "rechol"
requires-python = ">=3.11.7"
version = "0.1.0"

[tool.djlint]
# H006: img must have width and height attrs
# H017: self-closing <input>
# H019: javascript:void(0) is OK
# H020: Empty pair tag
# H021: inline styles
# H023: entity references (&times;)
# H026: Empty id and class tags can be removed (what does it mean?)
ignore = "H006,H017,H019,H020,H021,H023,H026"
indent = 2
profile = "django"

[tool.ruff]
preview = true
target-version = 'py312'

[tool.ruff.lint]
exclude = [
    ".svn",
    "CVS",
    ".bzr",
    ".hg",
    ".git",
    "__pycache__",
    ".tox",
    ".nox",
    ".eggs",
    "*.egg",
    "migrations",
    "manage.py",
]
extend-ignore = [
    "A003",  # Serializer's .list method is used a lot
    "S101",
    "TRY003",  # Avoid specifying long messages outside the exception class
    "RUF012",  # Mutable class attributes should be annotated with `typing.ClassVar`
    "DJ006",  # Do not use `exclude` with `ModelForm`, use `fields` instead
    "DJ007",  # Do not use `__all__` with `ModelForm`, use `fields` instead
    "RUF001",  # Russian letters in strings
    "ANN",  # Type hints
    "D",  # Docstrings
    "DOC",  # Docstrings
    "CPY",  # copyright
    "EM101",  # Exception must not use a string literal, assign to variable first
    "PLR6301",  # Method `xxx` could be a function, class method, or static method
    "PLC0415",  # `import` should be at the top-level of a file
    "E501",  # Let black care about line width, if not splitable - go on
    # Conflicts with save(self, commit=True) overrides
    "FBT002",  # Boolean default positional argument in function definition
    # conflicts with ruff-fmt
    "COM812",
]
select = ['ALL']

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
known-first-party = ["users", "rechol_user_section"]
required-imports = ["from __future__ import annotations"]
section-order = ["future", "standard-library", "django", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
django = ['django', 'rest_framework']

[tool.ruff.lint.per-file-ignores]
"**/migrations/*" = ["DTZ"]

[tool.uv]
compile-bytecode = true
dev-dependencies = []
link-mode = "copy"
